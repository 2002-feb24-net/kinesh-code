1. 
given a number of seconds print how many years old that persobn is on each planet 

using System;

public class Age
{
  public int Years;
  public int Months;
  public int Days;
  
  public Age(DateTime Bday)
  {
    this.Count(Bday);
  }
  
  public Age(DateTime Bday, DateTime Cday)
  {
    this.Count(Bday, Cday);
  }
  
  public Age Count(DateTime Bday)
  {
    return this.Count(Bday, DateTime.Today);
  }
  
  public Age Count(DateTime Bday, DateTime Cday)
  {
    if ((Cday.Year - Bday.Year) > 0 || 
        (((Cday.Year - Bday.Year) == 0) && ((Bday.Month < Cday.Month) || 
          ((Bday.Month == Cday.Month) && (Bday.Day <= Cday.Day)))))
    {
      int DaysInBdayMonth = DateTime.DaysInMonth(Bday.Year, Bday.Month);
      int DaysRemain = Cday.Day + (DaysInBdayMonth - Bday.Day);
  
      if (Cday.Month > Bday.Month)
      {
        this.Years = Cday.Year - Bday.Year;
        this.Months = Cday.Month - (Bday.Month + 1) + Math.Abs(DaysRemain / DaysInBdayMonth);
        this.Days = (DaysRemain % DaysInBdayMonth + DaysInBdayMonth) % DaysInBdayMonth;
      }
      else if (Cday.Month == Bday.Month)
      {
        if (Cday.Day >= Bday.Day)
        {
          this.Years = Cday.Year - Bday.Year;
          this.Months = 0;
          this.Days = Cday.Day - Bday.Day;
        }
        else
        {
          this.Years = (Cday.Year - 1) - Bday.Year;
          this.Months = 11;
          this.Days = DateTime.DaysInMonth(Bday.Year, Bday.Month) - (Bday.Day - Cday.Day);
        }
      }
      else
      {
        this.Years = (Cday.Year - 1) - Bday.Year;
        this.Months = Cday.Month + (11 - Bday.Month) + Math.Abs(DaysRemain / DaysInBdayMonth);
        this.Days = (DaysRemain % DaysInBdayMonth + DaysInBdayMonth) % DaysInBdayMonth;
      }
    }
    else
    {
      throw new ArgumentException("Birthday date must be earlier than current date");
    }
    return this;
  }
}




using System;

namespace ForeachStatement
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] planets = { "Mercury", "Venus",
                "Earth", "Mars", "Jupiter", "Saturn",
                "Uranus", "Neptune" };

            foreach (string planet in planets)
            {
                Console.WriteLine(planet);
            }
        }
    }
}





2.
given a string and a number print all the substrings of that length.
eg. "abcd"2  = ab,bc,cd


using System;

namespace NestedForLoops
{
    class Program
    {
        static void Main(string[] args)
        {
            var a1 = new string[] { "A", "B", "C" };
            var a2 = new string[] { "A", "B", "C" };

            for (int i=0; i<a1.Length; i++)
            {
                for (int j=0; j<a2.Length; j++)
                {
                    Console.WriteLine(a1[i] + a2[j]);
                }
            }
        }
    }
}